#!/usr/bin/env bash
set -e

usage() {
	echo "Usage: $0 <path_to_acsm_file> [path_to_adept_credentials_directory]"
	echo "Example: $0 /path/to/book.acsm"
	echo "Example: $0 /path/to/book.acsm /path/to/adept-credentials"
}

# Function to convert relative paths to absolute paths
convert_to_absolute_path() {
	local path=$1
	if [[ $path == /* ]]; then
		echo "$path"
	elif [[ $path == ~* ]]; then
		echo "$HOME/${path:1}"
	else
		echo "$(pwd)/$path"
	fi
}

# Function to check the adept credentials path
check_adept_credentials_path() {
	if [[ -z "$ACSM_CRED_DIR" ]]; then
		CREDENTIALS_PATH="$(dirname "$(readlink -f "$0")")/adept-credentials"
	else
		CREDENTIALS_PATH=$(convert_to_absolute_path "$CREDENTIALS_PATH")
	fi

	if [[ ! -d "$CREDENTIALS_PATH" || -z "$(find "$CREDENTIALS_PATH" -maxdepth 1 -type f)" ]]; then
		echo "!!!    WARNING: no ADEPT keys detected (argument \$2, or \"$CREDENTIALS_PATH\")."
		echo "!!!    Launching interactive terminal for credentials creation (device activation). Run this:"
		echo ""
		echo " > adept_activate --random-serial \\"
		echo "       --username {USERNAME} \\"
		echo "       --password {PASSWORD} \\"
		echo "       --output-dir files/adept-credentials"
		echo ""
		echo "!!!     (*) use --anonymous in place of --username, --password if you do not have an ADE account."
		echo "!!!     (*) credentials will be saved in the following path: \"$CREDENTIALS_PATH\""

		# preemtively create the directory where the credentails will be saved
		mkdir -p $CREDENTIALS_PATH

		# reset so the appropriate function in the main script is called
		CREDENTIALS_PATH=""
	fi
}

# Function to check and set the ACSM file
check_acsm_file() {
	if [[ -z "$ACSM_FILE" ]] || [[ ! -f "$ACSM_FILE" ]]; then
		echo ""
		echo "!!!    ERROR: no ACSM file detected (argument \$1)."
		echo "!!!    Launching interactive terminal for manual loan management. Example commands below:"
		echo ""
		echo " > acsmdownloader \\"
		echo "       --adept-directory .adept \\"
		echo "       --output-file encrypted_file.drm \\"
		echo "       \"files/{ACSM_FILE}\""
		echo " > adept_remove \\"
		echo "       --adept-directory .adept \\"
		echo "       --output-dir files \\"
		echo "       --output-file \"{OUTPUT_FILE}\" \\"
		echo "       encrypted_file.drm"
	fi
}

# Main script

# Check if the number of arguments is less than 1
if [ "$#" -lt 1 ]; then
	usage
	exit 1
fi

ACSM_FILE=$1
ACSM_CRED_DIR=$2

check_adept_credentials_path
check_acsm_file

# Determine the Docker command based on the presence of ADEPT keys and ACSM file
if [[ -z "$CREDENTIALS_PATH" ]]; then
	# ADEPT keys missing; can't run libgourou utils
	echo -e "\nMounted Volumes"
	echo -e "   $(dirname "$(readlink -f "$0")") --> /home/libgourou/files/\n"
	docker run \
		-v $(dirname "$(readlink -f "$0")"):/home/libgourou/files:Z \
		-it --entrypoint /bin/bash \
		--rm bcliang/docker-libgourou
else
	if [[ -z "$ACSM_FILE" ]] || [[ ! -f "$ACSM_FILE" ]]; then
		# ADEPT keys were found but no *.acsm file
		echo -e "\nMounted Volumes"
		echo -e "   $(dirname "$(readlink -f "$0")") --> /home/libgourou/files/"
		echo -e "   $CREDENTIALS_PATH --> mounted at /home/libgourou/.adept/\n"
		docker run \
			-v $(dirname "$(readlink -f "$0")"):/home/libgourou/files:Z \
			-v "$CREDENTIALS_PATH":/home/libgourou/.adept:Z \
			-it --entrypoint /bin/bash \
			--rm bcliang/docker-libgourou
	else
		# Both ADEPT keys and *.acsm file were found
		echo "> acsmdownloader --adept-directory .adept --output-file encrypted_file.drm \"files/$ACSM_FILE\""
		echo "> adept_remove --adept-directory .adept --output-dir files --output-file \"{OUTPUT_FILE}\" encrypted_file.drm"
		docker run \
			-v $(dirname "$(readlink -f "$0")"):/home/libgourou/files:Z \
			-v "$CREDENTIALS_PATH":/home/libgourou/.adept:Z \
			--rm bcliang/docker-libgourou \
			$ACSM_FILE
	fi
fi
